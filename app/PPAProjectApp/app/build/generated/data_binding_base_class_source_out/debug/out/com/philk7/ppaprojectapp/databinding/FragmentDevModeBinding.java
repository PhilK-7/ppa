// Generated by data binding compiler. Do not edit!
package com.philk7.ppaprojectapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.philk7.ppaprojectapp.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentDevModeBinding extends ViewDataBinding {
  @NonNull
  public final Button assistantChangeButton;

  @NonNull
  public final TextView createExnotfHeader;

  @NonNull
  public final Spinner dataSpinner;

  @NonNull
  public final Spinner deviceSpinner;

  @NonNull
  public final Button gotoLIAButton;

  @NonNull
  public final Button multiRecButton;

  @NonNull
  public final Spinner placeSpinner;

  @NonNull
  public final Button recButton;

  @NonNull
  public final Button showAtTimeButton;

  @NonNull
  public final Button showIntervalButton;

  @NonNull
  public final Button showMultiButton;

  @NonNull
  public final Button showNotfButton;

  @NonNull
  public final Button showSoonButton;

  protected FragmentDevModeBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button assistantChangeButton, TextView createExnotfHeader, Spinner dataSpinner,
      Spinner deviceSpinner, Button gotoLIAButton, Button multiRecButton, Spinner placeSpinner,
      Button recButton, Button showAtTimeButton, Button showIntervalButton, Button showMultiButton,
      Button showNotfButton, Button showSoonButton) {
    super(_bindingComponent, _root, _localFieldCount);
    this.assistantChangeButton = assistantChangeButton;
    this.createExnotfHeader = createExnotfHeader;
    this.dataSpinner = dataSpinner;
    this.deviceSpinner = deviceSpinner;
    this.gotoLIAButton = gotoLIAButton;
    this.multiRecButton = multiRecButton;
    this.placeSpinner = placeSpinner;
    this.recButton = recButton;
    this.showAtTimeButton = showAtTimeButton;
    this.showIntervalButton = showIntervalButton;
    this.showMultiButton = showMultiButton;
    this.showNotfButton = showNotfButton;
    this.showSoonButton = showSoonButton;
  }

  @NonNull
  public static FragmentDevModeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_dev_mode, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentDevModeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentDevModeBinding>inflateInternal(inflater, R.layout.fragment_dev_mode, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentDevModeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_dev_mode, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentDevModeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentDevModeBinding>inflateInternal(inflater, R.layout.fragment_dev_mode, null, false, component);
  }

  public static FragmentDevModeBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentDevModeBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentDevModeBinding)bind(component, view, R.layout.fragment_dev_mode);
  }
}
